no-guards proposal
------------------

Fix DSL grammar no to include special treatment for guards keywords, guards
should be declared inplace:

    routes = route(
      route(GET, "/url", qs(name=String), auth_required, endpoint),
      ...
      )

grammar:

    route([method], [uri pattern], [guard [, guard [, ...]]], endpoint, **kw)

    route([method], [uri pattern], [guard [, guard [, ...]]], [route [, route [, ...]]], **kw)

important
---------

  * combine HTTP methods with |

    route(GET | POST, "/uri", ...)

  * add support for routr.schema.QueryParams

  * improve test suite

  * more explanatory error messages

  * add docs!

  * URLPattern placeholders to be optionally labeled

    see as an example

      /api/news/{id:int}/

    that should only be rendered by .. autoroutr as

      /api/news/{id}/

    but should be functionally equivalent to

      /api/news/{int}/

less important
--------------

  * URLPattern to produce kwargs

    what about

      /api/news/{id:int}/

    to return {'id': ...} as kwargs to view? Probably bad idea because url
    should be considered as which contains only required params

  * optional docstrings for routes

    for now, we can pull docs from view's docstring, but it may be desirable to
    put different docstring for specific route.

  * introspection for guards or just make them able to generate documentation

  * expand URL reversal for unnamed routes (by view)

    sometimes it's just not possible, because we can define view as lambda or
    something

